{"version":3,"sources":["components/ListItem.js","App.js","reportWebVitals.js","index.js"],"names":["ListItem","props","listItem","items","map","item","className","text","onClick","deleteItem","key","App","state","currentItem","handleInput","bind","addItem","e","this","setState","target","value","Date","now","newItem","console","log","newItems","filteredItems","filter","type","placeholder","onChange","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"oOAuBeA,EArBE,SAACC,GAEd,IAEMC,EAFQD,EAAME,MAEGC,KAAI,SAACC,GACxB,OACI,sBAAKC,UAAU,OAAf,UACI,4BAAID,EAAKE,OACT,wBACIC,QAAS,kBAAMP,EAAMQ,WAAWJ,EAAKK,MADzC,iBAFuBL,EAAKK,QAQxC,OACI,qBAAKJ,UAAU,UAAf,SACKJ,KCoEES,E,kDAhFb,WAAYV,GAAQ,IAAD,8BAEjB,cAAMA,IAEDW,MAAQ,CAEXT,MAAO,GAEPU,YAAa,CACXN,KAAM,GACNG,IAAK,KAIT,EAAKI,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKN,WAAa,EAAKA,WAAWM,KAAhB,gBAhBD,E,+CAoBnB,SAAYE,GAEVC,KAAKC,SAAS,CAEZN,YAAa,CACXN,KAAMU,EAAEG,OAAOC,MACfX,IAAKY,KAAKC,W,qBAMhB,SAAQN,GAEN,IAAMO,EAAUN,KAAKN,MAAMC,YAE3B,GADAY,QAAQC,IAAIF,GACS,OAAjBA,EAAQjB,MAAkC,KAAjBiB,EAAQjB,KAAa,CAChD,IAAMoB,EAAQ,sBAAOT,KAAKN,MAAMT,OAAlB,CAAyBqB,IACvCN,KAAKC,SAAS,CACZhB,MAAOwB,EACPd,YAAa,CACXN,KAAM,GACNG,IAAK,S,wBAMb,SAAWA,GACT,IAAMkB,EAAgBV,KAAKN,MAAMT,MAAM0B,QAAO,SAACxB,GAAD,OAAUA,EAAKK,MAAQA,KACrEQ,KAAKC,SAAS,CACZhB,MAAOyB,M,oBAIX,WACE,OACE,sBAAKtB,UAAU,MAAf,UAEE,iCAEE,uBAAMA,UAAU,aAAhB,UAEE,uBAAOwB,KAAK,OAAOC,YAAY,kBAC7BV,MAAOH,KAAKN,MAAMC,YAAYN,KAC9ByB,SAAUd,KAAKJ,cAEjB,wBAAQgB,KAAK,SAAStB,QAASU,KAAKF,QAApC,sBAKJ,cAAC,EAAD,CAAUb,MAAOe,KAAKN,MAAMT,MAC1BM,WAAYS,KAAKT,oB,GA3ETwB,IAAMC,WCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDZ,M","file":"static/js/main.c948c09c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst ListItem = (props) => {\r\n\r\n    const items = props.items;\r\n\r\n    const listItem = items.map((item) => {\r\n        return (\r\n            <div className=\"list\" key={item.key}>\r\n                <p>{item.text}</p>\r\n                <button\r\n                    onClick={() => props.deleteItem(item.key)}>X</button>\r\n            </div>\r\n        );\r\n    })\r\n\r\n    return (\r\n        <div className=\"listCon\">\r\n            {listItem}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListItem;\r\n","import React from 'react'\nimport './App.css'\nimport ListItem from './components/ListItem'\n\nclass App extends React.Component {\n\n  constructor(props) {\n\n    super(props);\n\n    this.state = {\n\n      items: [],\n\n      currentItem: {\n        text: '',\n        key: ''\n      }\n    }\n\n    this.handleInput = this.handleInput.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n\n  }\n\n  handleInput(e) {\n\n    this.setState({\n\n      currentItem: {\n        text: e.target.value,\n        key: Date.now()\n      }\n\n    })\n  }\n\n  addItem(e) {\n\n    const newItem = this.state.currentItem;\n    console.log(newItem);\n    if (newItem.text !== null || newItem.text !== \"\") {\n      const newItems = [...this.state.items, newItem];\n      this.setState({\n        items: newItems,\n        currentItem: {\n          text: '',\n          key: ''\n        }\n      })\n    }\n  }\n\n  deleteItem(key) {\n    const filteredItems = this.state.items.filter((item) => item.key !== key);\n    this.setState({\n      items: filteredItems\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n\n        <header>\n\n          <form className=\"to-do-form\">\n\n            <input type=\"text\" placeholder=\"Enter your todo\"\n              value={this.state.currentItem.text}\n              onChange={this.handleInput} />\n\n            <button type=\"button\" onClick={this.addItem}>Add</button>\n          </form>\n\n        </header>\n\n        <ListItem items={this.state.items}\n          deleteItem={this.deleteItem} />\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}